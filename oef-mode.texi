\input texinfo  @c -*-texinfo-*-
@c %**start of header 
@setfilename oef-mode.info
@settitle Manuel oef-mode version alpha (french) "20231014.0413"
@documentlanguage fr_FR
@documentencoding UTF-8
@c %**end of header

@dircategory Languages
@direntry
* oef-mode: (oef-mode).    major mode for editing online exercise format documents (french manual)
@end direntry

@c Mise à jour du manuel (développement):   
@c -------------------------------------
@c Mette à jour les menus: Update all menus
@c Effacer "dir" du répertoire oef-mode avant de faire un push vers Github
@c Générer le fichier info à partir du Terminal OSX (ou du shell sous emacs mais pas  à partir de eshell):
@c cd .emacs.d/el-get/oef-mode
@c makeinfo oef-mode.texi
@c Générer le fichier pdf à partir du Terminal:
@c texi2pdf oef-mode.texi
@c Faire un push vers Github
@c Faire la mise à jour avec:
@c el-get-upate oef-mode
@c quitter puis relancer emacs

@c Raccourcis pour insérer les commandes texinfo dans emacs:
@c -----------------------------------------
@c https://www.gnu.org/software/texinfo/manual/texinfo/html_node/Inserting.html

@c C-c C-c c
@c M-x texinfo-insert-@code
@c Insert @code{}

@c C-c C-c d
@c M-x texinfo-insert-@dfn
@c Insert @dfn{}

@c C-c C-c e
@c M-x texinfo-insert-@end
@c Insert @end and attempt to insert the correct following word

@c C-c C-c i
@c M-x texinfo-insert-@item
@c Insert @item
@c @itemize @bullet: Making an Itemized List
@c Usually, you will use @bullet after @itemize, but you can use @minus
@c @enumerate : Without an argument, produce a numbered list, with the first item numbered 1. https://www.gnu.org/software/texinfo/manual/texinfo/html_node/_0040enumerate.html

@c C-c C-c k
@c M-x texinfo-insert-@kbd
@c Insert @kbd{}

@c C-c C-c n
@c M-x texinfo-insert-@node
@c Insert @node and a comment line listing the sequence for the ‘Next’, ‘Previous’, and ‘Up’ nodes. Leave point after the @node.

@c C-c C-c o
@c M-x texinfo-insert-@noindent
@c Insert @noindent and put the cursor at the beginning of the next line.

@c C-c C-c r
@c M-x texinfo-insert-dwim-@ref
@c This function and binding were added in Emacs 27.1. Inserts one of @pxref{}, @xref{}, or @ref{} based on the text around point; calling it near an unclosed preceding open parenthesis results in @pxref{}, at the beginning of a sentence or at (point-min) yields @xref{}, any other location (including inside a word), will result in @ref{}. A numeric argument says how many words the braces should surround. Puts the cursor between the braces.

@c C-c C-c s
@c M-x texinfo-insert-@samp
@c Insert @samp{} 

@c C-c C-c t
@c M-x texinfo-insert-@table
@c Insert @table 

@c C-c C-c v
@c M-x texinfo-insert-@var
@c Insert @var{}
@c utiliser @code et pas @var pour les variables de programme 

@c C-c C-c x
@c M-x texinfo-insert-@example
@c Insert @example 

@c C-c C-c {
@c M-x texinfo-insert-braces
@c Insert {} 

@c C-c }
@c C-c ]
@c M-x up-list




@copying
This is the @code{oef-mode} manual, version alpha (in french) "20231014.0413"

@quotation
OEF veut dire ''Online Exercise Format'', un format pour d'exercices et de documents interactifs destinés à l'enseignement assisté par ordinateur.

Le format d'un fichier OEF est très similaire à LaTeX. Il est composé d'instructions suivies d'un ou plusieurs paramètres. Le mode @code{oef-mode} pour Emacs a pour ambition d'être un outil efficace pour la création et la mise en ligne de documents ou d'exercices sous ce format.
@end quotation

Copyright @copyright{} 2017 - 2023 Raoul Hatterer.

@end copying


@titlepage
@title oef-mode
@subtitle  mode majeur d'Emacs pour éditer des exercices et des documents interactifs
@subtitle au format « online exercise format » (version alpha "20231014.0413")
@author Raoul Hatterer


@c The following two commands start the copyright page.
@page
@vskip 0pt plus 1filll
@insertcopying
@end titlepage

@c Output the table of contents at the beginning.
@contents

@ifnottex
@node Top
@c --------------------------------------------------------------------------------
@top Manuel d'utilisation d'oef-mode
@insertcopying
@end ifnottex

@menu
* Introduction::                Commencer
* Le compte Modtool::           Le compte Modtool
* Les documents Wims::          Les documents Wims (au format OEF)
* Les exercices Wims::          Les exercices Wims (au format OEF)
* Index::                       Index
@end menu


@node Introduction
@c --------------------------------------------------------------------------------
@chapter Introduction

Le présent manuel est disponible au format PDF, mais il est également intégré, une fois le package oef-mode installé, au système d'information d'Emacs accessible par le raccourci @kbd{C-h i}.  


@menu
* Résumé::                      Bref résumé de ce que permet oef-mode
* Installations::               Installer Emacs, el-get, use-package, oef-mode
* Activation::                  Comment activer oef-mode pour certains buffers
@end menu

@node Résumé
@c --------------------------------------------------------------------------------
@section Résumé
@code{oef-mode} est un mode majeur permettant d'éditer des exercices et des documents au format « online exercise format ».     

Il propose un menu et des raccourcis permettant d'accéder aux commandes, fonctions, scripts... spécifiques au format OEF.

@node Installations
@c --------------------------------------------------------------------------------
@section  Installations
@cindex installation


@menu
* Installation d'emacs::
* Fichier d'initialisation::
* Gestionnaires de packages::
* Configurer le clavier du Mac::  Indispensable
* Installer oef-mode::
* Installer oef-mode manuellement::
* Autres installations::
@end menu

@node Installation d'emacs
@subsection Installation d'emacs
@cindex installation, emacs

Cette partie est à destination des lecteurs du document PDF qui, connaissant peut-être déjà Wims et le format OEF, souhaiteraient tester @command{oef-mode}. Ils trouveront ici des indications pour installer Emacs.

@c Suivre les explications données ici  @url{http://ergoemacs.org/emacs/which_emacs.html}
@menu
* Sous Windows::                Télécharger et installer la version Windows d'emacs
* Sous Mac OSX::                Télécharger et installer la version Mac d'emacs
* Sous Linux::                  Télécharger et installer la version Linux d'emacs
@end menu


@node Sous Windows
@subsubsection Sous Windows
@cindex installation, emacs, Windows

@itemize
@item Déterminez si votre Microsoft Wimdows est 32 ou 64 bits: pour cela, appuyez sur la touche @key{Window} ; commencez à taper ``Afficher le système d'exploitation exécuté par votre ordinateur'' dans la zone de recherche et sélectionnez ce choix.  Cela fait apparaître une fenêtre dans laquelle le type de système (32 ou 64 bits) est indiqué.
@item Rendez-vous ensuite à la page de téléchargement: @url{https://ftp.gnu.org/pub/gnu/emacs/windows/emacs-27/} et téléchargez l'installateur:
@itemize
@item @command{emacs-$VERSION-x86_64-installer.exe} si votre système d'exploitation est 64 bits
@item @command{emacs-$VERSION-i686-installer.exe} si votre système d'exploitation est 32 bits
@end itemize
@item Lancez le programme d'installation pour installer Emacs sur votre ordinateur.
@end itemize

@node Sous Mac OSX
@subsubsection Sous Mac OSX
@cindex installation, emacs, Mac, OSX

Sous mac OSX, vous pouvez installer la version que vous trouverez ici: @url{https://emacsformacosx.com}


@node Sous Linux
@subsubsection Sous Linux
@cindex installation, emacs, Linux
@command{sudo apt-get install emacs}




@node Fichier d'initialisation
@subsection Fichier d'initialisation
@cindex initialisation, init

Le fichier d'initialisation est un fichier qu'Emacs charge lorsqu'il démarre. Il est utilisé pour personnaliser Emacs.

Sous Linux et Mac, par défaut, Emacs cherche le fichier d'initialisation aux emplacements suivants :

@itemize
@item @file{~/.emacs}
@item @file{~/.emacs.el}
@item @file{~/.emacs.d/init.el} (depuis 2010 il s'agit de l'emplacement à privilégier)
@end itemize

Sous Microsoft Windows:

@itemize
@item @file{%HOMEPATH%\AppData\Roaming\.emacs.d\init.el} (emplacement à privilégier)
@item @file{%HOMEPATH%\AppData\Roaming\.emacs}
@end itemize

@node Gestionnaires de packages
@subsection Gestionnaires de packages
@cindex gestionnnaire, package

Le paquet (package) @command{oef-mode} ne faisant pas partie des paquets pré-installés avec emacs, il vous faudra l'installer.
 De plus, @code{oef-mode} n'étant pas répertorié dans @emph{elpa}, le dépôt de packages accessible par défaut dans emacs, je recommande d'installer el-get @url{http://wikemacs.org/wiki/El-get} un gestionnaire de package alternatif car le package @code{oef-mode} s'y trouve répertorié. Pour cela, nous utiliserons un fichier d'initialisation chargé en tout premier appelé @file{early-init.el}. 


Dans Emacs saisir la commande @kbd{C-x C-f} @code{Find file:} @file{~/.emacs.d/early-init.el} (ou @file{%HOMEPATH%\AppData\Roaming\.emacs.d\early-init.el} sous Microsoft Windows) pour créer un nouveau buffer nommé @file{early-init.el} et placez y le code suivant (@kbd{C-y} permet de coller(yank) dans Emacs) destiné à installer le gestionnaire de package @code{el-get}: 

@cartouche
@lisp
(add-to-list 'load-path "~/.emacs.d/el-get/el-get")

(unless (require 'el-get nil 'noerror)
  (require 'package)
  (add-to-list 'package-archives
               '("melpa" . "http://melpa.org/packages/"))
  (package-refresh-contents)
  (package-initialize)
  (package-install 'el-get)
  (require 'el-get))

(add-to-list 'el-get-recipe-path "~/.emacs.d/el-get-user/recipes")
(el-get 'sync)
@end lisp
@end cartouche

@itemize
@item Sélectionner l'ensemble du code avec @kbd{C-x h}
@item Indenter le code avec @kbd{M-x:} @code{indent-region}
@item Sauvegardez avec @kbd{C-x C-s}
@item Quittez Emacs avec @kbd{C-x C-c}
@end itemize

Microsoft Windows:
@itemize
@item Lancez Emacs. Patientez le temps de l'installation de @code{el-get}. Quittez Emacs. Relancez Emacs.
@end itemize

Mac OSX:
@itemize
@item Lancez Emacs à partir du Terminal:

(@command{/Applications/Emacs.app/Contents/MacOS/Emacs &}).

@item Patientez le temps de l'installation de @code{el-get}. Quittez Emacs. Relancez Emacs.
@end itemize

@node Configurer le clavier du Mac
@subsection Configurer le clavier du Mac

Vous vous apercevrez que, par défaut, les deux touches @kbd{option} ont été configurées en touche Meta @kbd{M-} pour emacs ce qui fait que vous avez perdu l'accès aux accolades (@kbd{option parenthèse}), aux crochets (@kbd{option shift parenthèse}) et aux autres caractères auxquels vous aviez accès par le biais de la touche @kbd{option}.

Éditer le fichier d'initialisation (@samp{~/.emacs.d/init.el}) et rajouter les lignes suivantes qui permettent d'avoir la touche @kbd{option} de gauche qui agit comme @kbd{Meta} tandis que la touche @kbd{option} de droite reste inchangée pour pouvoir accéder à des caractères comme les accolades ou les crochets. 

Pour cela, tapez @kbd{C-x C-f} (c'est-à-dire @kbd{control} x suivi de @kbd{control} f) dans Emacs.

@command{Find file:} apparaît sous la fenêtre. Saisir @samp{~/.emacs.d/init.el} et valider.

Coller le code suivant, sans indentation:

@cartouche
@lisp
;; mac specific bindings
(setq mac-right-command-modifier nil ; cmd de droite = cmd
      mac-command-modifier nil ; cmd de gauche = cmd
      mac-option-modifier 'meta ; option de gauche = meta
      mac-right-option-modifier nil ; option de droite = car. spéciaux
      mac-control-modifier 'control ; control de gauche = control 
      ns-function-modifier 'hyper ; fn key = hyper
      ns-right-alternate-modifier nil); cette touche n'existe pas

;; INDENT-REGION on OSX 
(global-set-key (kbd "C-:") 'indent-region)

(load-library "iso-transl") ; pour avoir l’accent circonflexe

;; exec-path
(add-to-list 'exec-path "/usr/local/bin")

;; load-path
(add-to-list 'load-path "~/.emacs.d/lisp")

@end lisp
@end cartouche

Sauvegardez avec @kbd{C-x C-s} puis quitter Emacs (@kbd{C-x C-c}), relancez Emacs et vérifiez que vous pouvez avoir les accolades. 

Si un fichier @file{~/.emacs} a été créé dans votre dossier personnel, il faut l'effacer car il prend le pas sur le fichier @file{~/.emacs.d/init.el}. 



@node Installer oef-mode
@subsection Installer oef-mode



@itemize 




@item Créer ou éditer le fichier d'initialisation (@code{~/.emacs.d/init.el}) et rajouter les lignes suivantes qui permettent d'installer @code{oef-mode}, et @code{use-package},  s'ils ne le sont pas déjà:

@cartouche
@lisp
(setq my:el-get-packages
      '(cl-lib
	el-get
        oef-mode	
        use-package            
        ))

(el-get 'sync my:el-get-packages)

(use-package company
	     :ensure t
	     :config
(add-hook 'after-init-hook 'global-company-mode)
	     )
;; global activation of the unicode symbol completion 

;; Permet d’activer le mode oef-mode quand on visite les
;;fichiers avec l’extension .oef
(load "oef-mode.el")
@end lisp
@end cartouche


@item Quitter et relancer emacs
@end itemize


La dernière version @code{oef-mode} vient d'être installée. Pour faire des mise à jour dans le futur, il y a la commande @code{M-x:}  @command{el-get-update oef-mode}



@node Installer oef-mode manuellement
@subsection Installer oef-mode manuellement

Si vous utilisiez déjà Emacs, sans @code{el-get} ni @code{use-package}, une alternative est d'installer @code{oef-mode} manuellement:

@itemize
@item S'il n'existe pas encore, créer le répertoire @code{"~/.emacs.d/lisp/"}
@item Télécharger l'archive zip @url{https://github.com/raoulhatterer/oef-mode/archive/master.zip}, la décompresser dans le répertoire  @file{"~/.emacs.d/lisp/"}
@item Ajouter le code suivant à votre fichier @file{~/.emacs.d/init.el} ou @code{.emacs} avant la ligne @samp{(package-initialize)}.

@cartouche
@lisp
;; Tell emacs where is your personal elisp lib dir
(add-to-list 'load-path "~/.emacs.d/lisp/oef-mode")
(load "oef-mode.el") ;; load the package named oef-mode
@end lisp
@end cartouche

@item Quitter et relancer emacs. 
@end itemize


Par convention, le répertoire @file{"~/.emacs.d/lisp/"} est la destination des bibliothèques installées de façon manuelle.



@node Autres installations
@subsection Autres installations


@menu
* Lier emacs à la corbeille::   Les fichiers effacés vont dans la corbeille
* EMMET-MODE (Zen-coding)::     Transformer des snippets en tags
@end menu


@node Lier emacs à la corbeille
@subsubsection Lier emacs à la corbeille

Insérer le code suivant dans votre fichier init pour que les fichiers supprimés dans emacs aillent dans la corbeille du Mac:

@cartouche
@lisp
;;; Les fichiers qu’on supprime dans emacs vont dans la corbeille
(use-package osx-trash
	     :ensure t
	     :config
             (osx-trash-setup)
             (setq delete-by-moving-to-trash t)
	     )
@end lisp
@end cartouche



@node EMMET-MODE (Zen-coding)
@subsubsection EMMET-MODE (Zen-coding)

EMMET-MODE est une méthodes puissante pour coder rapidement du HTML

Par exemple, le snippet ul>li.item$*3 suivi de @kbd{C-j} permet de transformer le snippet en tags HTML:
@example
<ul>
    <li class="item1"></li>
    <li class="item2"></li>
    <li class="item3"></li>
</ul>
@end example

Consulter la page suivante pour découvrir d'autres possibilités:
@url{https://github.com/smihica/emmet-mode}


Pour disposer de raccourcis claviers, placer le code suivant dans votre fichier init d'emacs:
@lisp
;;; EMMET-MODE
(defvar emmet-mode-keymap
  (let
      ((map (make-sparse-keymap)))
    (define-key map (kbd "C-j") 'emmet-expand-line)
    (define-key map (kbd "<C-M-right>") 'emmet-next-edit-point)
    (define-key map (kbd "<C-M-left>") 'emmet-prev-edit-point)
    (define-key map (kbd "C-c w") 'emmet-wrap-with-markup)
    map)
  "Keymap for emmet minor mode.")
@end lisp


Raccourcis disponibles:
@table @kbd
@item @kbd{C-j}
Transforme un snippet en tags
@item @kbd{<C-M-right>}
Point d'édition suivant 
@item @kbd{<C-M-left}>
Point d'édition précédent
@item @kbd{C-c w}
Transforme le mot sélectionné en tag
@end table









@node Activation
@c --------------------------------------------------------------------------------
@section  Activation

@itemize
@item Pour activer et déactiver le mode: @kbd{M-x: oef-mode}
@item Quand vous créez un fichier avec l'extension @code{.oef} le mode s'active automatiquement.
@end itemize




@node Le compte Modtool
@c --------------------------------------------------------------------------------
@chapter Le compte Modtool

 Pour pouvoir développer des modules avec Modtool il faut demander un
compte par email au gestionnaire du site.







@node Les documents Wims
@c --------------------------------------------------------------------------------
@chapter Les documents Wims

Il s'agit d'un ensemble de pages HTML (il vous faut donc connaître la
syntaxe HTML et CSS) dans lesquelles peuvent être incluses des données
calculées ou dessinées par les logiciels attenant à WIMS (des
commandes supplémentaires étendant les possibilités de HTML permettent
de faire cela). Les documents peuvent être utilisés pour proposer des
cours avec des exemples à caractère aléatoire et des liens directs
vers les exercices.

L'intérêt à faire un document WIMS plutôt que des pages html est donc
la possibilité d'inclure:
@itemize @minus
@item
des exemples qui peuvent être renouvelés à la volée par le lecteur;
@item
des liens directs sur des exercices, ou sur des outils;
@item
des zones à déplier et replier (avec \fold) qui permettent à l'élève
de se concentrer sur le plan, sur un théorème sans sa démonstration ou
au contraire sur sa démonstration.
@end itemize


Pour homogénéiser la présentation des documents vous pouvez ajouter
votre style CSS valable pour tout le document : pour cela, aller à
Propriétés du document et copier votre fichier de style ou son adresse
url.

Par exemple,
@example
<style>
div.cours@{
background-color : #faffe6;
margin : 0 5%;
padding : 3%;
border-width : thin;
@}
</style>
@end example

Vous pouvez aussi ajouter de la même manière du code JavaScript.

Pour intégrer des applets présents sur un autre site à un document, il suffit de mettre l'adresse url des applets.

Comment classer les pages d'un document ?

L'option parent permet d'établir une hiérarchie entre les pages d'un document en plus des options usuelles précédent et suivant (par défaut, le parent est main). C'est commode pour gérer des "chapitres" et des tables de matières de chapitre.

Les formules TeX débordent. Que faire ?

Il vaut mieux couper les formules TeX un peu longues, \(...) = \(...), plutôt que \(... = ...). Cela laisse au navigateur le choix de les mettre sur la même ligne ou non selon la taille de la fenêtre.


Dans un document, comment demander au lecteur d'entrer un paramètre ?

Voici un exemple où le paramètre à entrer est un entier :
@example
\def@{integer n = randint(2..9)@}
\form@{.@}@{exemple@}@{ n =
<input size = "6" name = "parm1" value = "\parm1">
<input type = "hidden" value = "OK">
@}
\def@{integer value = \parm1@}
\def@{integer n = \value issametext NaN ? \parm1: \value@}
@end example

Par défaut, l'entier n sera un entier entre 2 et 9. 


J'ai fait un document dans ma classe, comment le citer ?

Dans un autre document, si le document cité a le numéro c9 :
@code{\link@{c9/main@}} On peut aussi remplacer main le nom d'un autre bloc si
on veut aller à une page particulière.


J'ai chargé un fichier pdf, ai fait un copier-coller du lien indiqué
dans le document et le lien n'apparaît pas sur le nom du fichier.


Si vous avez fait un copier-coller du lien indiqué, il est possible
que le blanc ait été mal codé. Enlevez les blancs et remettez-les !




@node Les exercices Wims
@c --------------------------------------------------------------------------------
@chapter Les exercices Wims

@menu
* L'en-tête::                   Requis
* Les commentaires::            Facultatifs
* Les variables::               Requises
* Le texte de l'énoncé::        Requises
* Les aides (partie facultative)::  Facultatives
* Les réponses::                Requises
@end menu


@node L'en-tête
@c --------------------------------------------------------------------------------
@section L'en-tête

Le début du fichier doit comporter un en-tête.

Exemple d'en-tête:

@example
\title@{SEUL SUR MARS@}
\language@{fr@}
\range@{-5..5@}
\author@{hatterer.med@@laposte.net@}
\computeanswer@{no@}
<!-- l utilisateur doit lui-même faire les calculs et entrer la valeur finale -->
@end example

Les différentes commandes dont celles utilisées dans l'en-tête figurent dans le menu @command{OEF>Commands}.

@node Les commentaires
@c --------------------------------------------------------------------------------
@section Les commentaires

Dans la spécification W3C, un commentaire commence par @samp{<! --} et se termine par @samp{-->}

@kbd{M-;} permet d'insérer un commentaire.

@node Les variables
@c --------------------------------------------------------------------------------
@section Les variables

Après l'en-tête, on initialise les différentes variables introduites ou calculées.

C'est la partie qui fera appel à vos qualités de programmeur car elle correspond à «l'intelligence» de l'exercice. 




@node Le texte de l'énoncé
@c --------------------------------------------------------------------------------
@section Le texte de l'énoncé

@table @command
@item @command{\statement@{...@}}
pour écrire l'énoncé (cette commande est indispensable mais ne doit apparaître qu'une seule fois)
@end table

Pour ceux qui connaissent Python, c'est un peu comme si l'on avait le droit d'utiliser q'une seule fois l'instruction @command{print()} mais qu'en revanche le texte à afficher pouvait être très très long et mis en forme au format HTML.

@node Les aides (partie facultative)
@c --------------------------------------------------------------------------------
@section Les aides (partie facultative)

Cette partie facultative est à placer entre le texte de l'énoncé (@xref{Le texte de l'énoncé}) et les réponses (@xref{Les réponses}).


@table @command
@item @command{\hint @{...@}}
pour écrire une indication (ce qui apparaît lorsqu’on clique sur le lien @command{Indications} placé sous l'énoncé)
@item @command{\help @{...@}}
pour un texte qui apparaîtra lorsque l'utilisateur clique sur @command{Aide} de la barre de menu en haut de l’exercice.
@end table




@node Les réponses
@c --------------------------------------------------------------------------------
@section Les réponses

Après l'énoncé (ou les aides s'il y en a) on mettra la partie
concernant la saisie et l'analyse des réponses.

@table @command
@item @command{\answer@{...@}@{ ... @}@{type= ...@}}
pour analyser une réponse
@end table

Puisque généralement plusieurs réponses sont attendues, cette commande
sera à écrire plusieurs fois (une fois par réponse attendue).


Vous pouvez bien sûr taper cette commande au clavier, mais sachez
qu'oef-mode offre plusieurs possibilités pour insérer une réponse:
@itemize @minus
@item
menu @command{OEF > Commands > answer}
@item
@kbd{M-x} @command{oef-insert-answer}
@item
le raccourci @kbd{C-o-a}
@end itemize

Et pour sélectionner les paramètres entre accolades avec oef-mode:
@itemize @minus
@item
@kbd{M-x} @command{oef-select-parameter}
@item
le raccourci @kbd{C-o C-p}
@end itemize



Dans la première accolade, on peut mettre du texte qui apparaît devant
le champ réservé à la réponse. Cel peut être un résumé de la question
que l'on a peut-être posée de façon plus détaillée dans l'énoncé
(@xref{Le texte de l'énoncé}). Pour ceux qui connaissent Python, c'est
l'équivalent du texte que vous mettez entre les parenthèses de
l'instruction @command{input()}. La réponse de l'utilisateur à la
première question est automatiquement stockée dans la variable
@code{\reply1} et ainsi de suite pour les autres réponses. Mais,
généralement, vous n'allez pas faire appel à ces variables pour
analyser les réponses de l'utilisateur. À la place, vous allez
préciser entre les accolades qui suivent la réponse que vous attendez.



La deuxième accolade doit contenir les éléments permettant de décider
si la réponse est juste ou non. Ces éléments vont dépendre du type
précisé dans la troisième accolade.


Le menu @command{OEF > Answers Types and Options} liste et permet
d'insérer les différents types et options que vous pouvez utiliser.

Pour une analyse plus détaillée sachez que la variable
@code{\sc_reply1} vaut 1 si la réponse donnée est juste, 0.5 si la
réponse donnée est partiellement juste et 0 si la réponse donnée est
fausse pour les types de réponse où elle n’a pas été définie
explicitement.




@node Index
@c --------------------------------------------------------------------------------
@unnumbered Index

@printindex cp
 



@bye
